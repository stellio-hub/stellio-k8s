apiVersion: v1
kind: Service
metadata:
  labels:
    app: stellio-postgres
  name: stellio-postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: stellio-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: stellio-postgres-pvc
  name: stellio-postgres-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Gi
  volumeName: nfs-egm-pv
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: stellio-postgres
  name: stellio-postgres
spec:
  selector:
    matchLabels:
      app: stellio-postgres
  serviceName: stellio-postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: stellio-postgres
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector: {}
      containers:
      - name: stellio-postgres
        image: stellio/stellio-timescale-postgis:14-2.11.1-3.3
        env:
        - name: POSTGRES_DBNAME
          valueFrom:
            configMapKeyRef:
              name: stellio-conf
              key: POSTGRES_DBNAME
        - name: STELLIO_SEARCH_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: stellio-conf
              key: STELLIO_SEARCH_DB_DATABASE
        - name: STELLIO_SUBSCRIPTION_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: stellio-conf
              key: STELLIO_SUBSCRIPTION_DB_DATABASE
        - name: ACCEPT_TIMESCALE_TUNING
          value: "TRUE"
        - name: POSTGRES_MULTIPLE_EXTENSIONS
          value: postgis,timescaledb,pgcrypto
        envFrom:
          - secretRef:
              name: pg-credentials
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U $POSTGRES_USER -h localhost
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        # readinessProbe:
        #   exec:
        #     command:
        #     - /bin/sh
        #     - -c
        #     - -e
        #     - |
        #       exec pg_isready -U "postgres" -d "dbname=stellio_search" -h 127.0.0.1 -p 5432
        #       [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        #   failureThreshold: 6
        #   initialDelaySeconds: 5
        #   periodSeconds: 30
        #   successThreshold: 1
        #   timeoutSeconds: 5
        ports:
        - containerPort: 5432
          name: postgres
        resources: {}
        volumeMounts:
        - name: pg-data
          mountPath: "/var/lib/postgresql/data"
      restartPolicy: Always
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: stellio-postgres-pvc
